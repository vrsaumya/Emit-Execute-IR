module attributes {llvm.data_layout = ""} {
  llvm.func @printNewline()
  llvm.func @printI64(i64)
  llvm.func @main() {
    %0 = llvm.mlir.constant(12 : i64) : i64
    %1 = llvm.call @calcFact(%0) : (i64) -> i64
    llvm.call @printI64(%1) : (i64) -> ()
    llvm.call @printNewline() : () -> ()
    llvm.return
  }
  llvm.func @calcFact(%arg0: i64) -> i64 attributes {sym_visibility = "private"} {
    %0 = llvm.mlir.constant(1 : i64) : i64
    %1 = llvm.mlir.constant(12 : i64) : i64
    llvm.br ^bb1(%0, %0, %1 : i64, i64, i64)
  ^bb1(%2: i64, %3: i64, %4: i64):  // 2 preds: ^bb0, ^bb2
    %5 = llvm.icmp "slt" %2, %1 : i64
    llvm.cond_br %5, ^bb2, ^bb3
  ^bb2:  // pred: ^bb1
    %6 = llvm.mul %3, %4  : i64
    %7 = llvm.sub %4, %0  : i64
    %8 = llvm.add %2, %0  : i64
    llvm.br ^bb1(%8, %6, %7 : i64, i64, i64)
  ^bb3:  // pred: ^bb1
    llvm.return %3 : i64
  }
}

